---
description: Validate inputs; handle errors/timeouts; guard against injection, XSS, CSRF; secrets hygiene; avoid races; clean up I/O.
globs:
alwaysApply: true
---

# Safety & Security
- Handle errors, null/undefined, timeouts, edge cases.
- Validate inputs; never trust external data.
- Consider injection, XSS, CSRF, authN/authZ, secrets handling.
- Avoid race conditions; guard/synchronize critical sections.
- Clean up I/O resources (files, sockets, DB connections).

## Example
- Web handlers: validate request schema (Zod/Yup), sanitize output, set HTTP-only secure cookies, CSRF token on state-changing requests.
